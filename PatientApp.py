import WardApp
import ExceptionApp
import DatabaseConnect
import datetime

# Function for New Patient Admission
# Patient id will be autogenerated,

def patientEntry():
    try:
        patientName=input("Enter Patient Name:")
        patientAddress=input("Enter Patient Address:")
        gender=input("Enter Patient Gender:")
        age=int(input("Enter Patient age:"))
        problem=input("Enter Patient Problem:")
        wardId=int(input("Enter ward number to admit:"))
        flag=WardApp.wardFind(wardId)
        if flag==False :
            raise ExceptionApp.WardError("Ward Number not exists")
        admitDate=input("Enter date of addmission(dd-mm-yyyy):")
        adDate=admitDate.split("-")
        if len(adDate)!=3:
            raise ExceptionApp.DateFormatError("Wrong Date Format")
        
        conn=DatabaseConnect.databaseConnector()
        mycursor = conn.cursor()
        mycursor.execute("SELECT count(*) FROM patient")
        myresult = mycursor.fetchone()
        x=int(myresult[0])
        patientId=0
        if x==0 :
          patientId=1
        else:
          patientId=x+1

        sql = "INSERT INTO patient(patient_id,patient_name,patient_address,gender,age,problem,ward_id,\
admit_date) VALUES (%s, %s, %s, %s, %s, %s, %s, %s)"
        val = (patientId,patientName,patientAddress,gender,age,problem,wardId,admitDate)
        mycursor.execute(sql, val)
        conn.commit()
        WardApp.wardUpdate(wardId,"I")
        print("Patient ID:"+str(patientId)+" is admitted")
        conn.close()

        
    except ExceptionApp.WardError as error1:
        print(error1)
    except ExceptionApp.DateFormatError as error2:
        print(error2)
        
#patientEntry()

# Function for  Patient Release & bill generation

def patientRelease():
    conn=DatabaseConnect.databaseConnector()
    try:
        patientId=int(input("Enter patient id to release:"))
        mycursor = conn.cursor()
        sql = "SELECT patient_id from patient where patient_id="+str(patientId)
        mycursor.execute(sql)
        myresult = mycursor.fetchone()
        if myresult == None:
             raise ExceptionApp.PatientError("Patient Number not exists")
        sql = "SELECT * from patient where patient_id="+str(patientId)
        mycursor.execute(sql)
        myresult = mycursor.fetchone()
        wardId=myresult[6]
        print("Patient Id:",myresult[0])
        print("Patient Name:",myresult[1])
        print("Patient Address:",myresult[2])
        print("Patient Gender:",myresult[3])
        print("Patient Age:",myresult[4])
        print("Patient Problem:",myresult[5])
        print("Ward Number:",wardId)
        print("Admission Date:",myresult[7])
        admitDate = datetime.datetime.strptime(myresult[7], '%d-%m-%Y').date()
        releaseDate=input("Enter Release Date (dd-mm-yyyy):")
        rlDate=releaseDate.split("-")
        if len(rlDate)!=3:
            raise ExceptionApp.DateFormatError("Wrong Date Format")
        endDate=datetime.datetime.strptime(releaseDate, '%d-%m-%Y').date()
        diffDays=(endDate-admitDate).days
        rate=WardApp.findBedRate(wardId)
        medExp=float(input("Enter medical Expences:"))
        print("Bed charge per day:",rate)
        print("No of Days in bed:",diffDays)
        wardExp=rate*diffDays
        print("Total Bed Charges:",wardExp)
        amountPayable=medExp+wardExp
        print("Total Amount Payable:",amountPayable)
        sql = "UPDATE patient SET release_date = %s,ward_exp = %s, medical_exp = %s WHERE patient_id = %s"
        val = (releaseDate,wardExp,medExp,patientId)
        mycursor.execute(sql, val)
        conn.commit()
        print("Patient Released")
        WardApp.wardUpdate(wardId,"R")
        
    except ExceptionApp.PatientError as error1:
        print(error1)
    except ExceptionApp.DateFormatError as error2:
        print(error2)
    finally:
        conn.close()
        
#patientRelease()


